//! account: alice, 1000000
//! account: bob, 1000000
//! account: chris, 1000000

//! new-transaction
//! sender: alice
module Zero {

    resource T {
        counterparty: address,
    }

    public create(counterparty: address): Self.T {
        let contract: Self.T;

        contract = T {
            counterparty: move(counterparty),
        };

        return move(contract);
    }

    // Initialize the contract as the holder.
    public initialize(contract_ref: &mut Self.T) {

        return;
    }

    // Acquires the contract and releases all inner resources.
    public acquire(contract: Self.T) {
        let counterparty: address;
        let sender: address;

        T { counterparty } = move(contract);

        sender = get_txn_sender();
        assert(copy(counterparty) == move(sender), 401);

        return;
    }

}
